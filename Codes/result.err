┌ Error: CUDA.jl could not find an appropriate CUDA runtime to use.
│ 
│ This can have several reasons:
│ * you are using an unsupported platform: this version of CUDA.jl
│   only supports Linux (x86_64, aarch64, ppc64le) and Windows (x86_64),
│   while your platform was identified as x86_64-linux-gnu-libgfortran5-cxx11-libstdcxx29-cuda+none-julia_version+1.8.1;
│ * you precompiled CUDA.jl in an environment where the CUDA driver
│   was not available (i.e., a container, or an HPC login node).
│   in that case, you need to specify which CUDA version to use
│   by calling `CUDA.set_runtime_version!`;
│ * you requested use of a local CUDA toolkit, but not all
│   required components were discovered. try running with
│   JULIA_DEBUG=all in your environment for more details.
│ 
│ For more details, refer to the CUDA.jl documentation at
│ https://cuda.juliagpu.org/stable/installation/overview/
└ @ CUDA ~/.julia/packages/CUDA/s5N6v/src/initialization.jl:82
ERROR: LoadError: UndefVarError: AbstractCCP not defined
Stacktrace:
 [1] include(fname::String)
   @ Base.MainInclude ./client.jl:476
 [2] top-level scope
   @ /storage/work/tzk5446/NeurCCOPT/Codes/experiments.jl:6
in expression starting at /storage/work/tzk5446/NeurCCOPT/Codes/optimization.jl:1
in expression starting at /storage/work/tzk5446/NeurCCOPT/Codes/experiments.jl:6
